unit UEnderecoIntegracao;

interface

uses
System.SysUtils, System.Classes, System.Json,
    Datasnap.DSServer, Datasnap.DSAuth, DataSnap.DSProviderDataModuleAdapter,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, FireDAC.UI.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Phys, FireDAC.Phys.PG, FireDAC.Phys.PGDef,
  FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client, FireDAC.Comp.DataSet;

type
  TWsEnderecoIntegracao = class(TDSServerModule)
    QyEnderecoIntegracao: TFDQuery;
    FDUpdateSQL: TFDUpdateSQL;
    QyEnderecoIntegracaoidpessoa: TLargeintField;
    QyEnderecoIntegracaoflnatureza: TIntegerField;
    QyEnderecoIntegracaodsdocumento: TStringField;
    QyEnderecoIntegracaonmprimeiro: TStringField;
    QyEnderecoIntegracaonmsegundo: TStringField;
    QyEnderecoIntegracaodtregistro: TDateField;
  private
    { Private declarations }
  public
    { Public declarations }
    function Pessoa(idpessoa: integer): TJSONValue; ///GET
    function acceptPessoa(dados: TJSONObject): TJSONValue; //PUT
    function updatePessoa(idpessoa: integer; dados: TJSONObject): TJSONValue;//POST
    function cancelPessoa(idpessoa: integer): TJSONValue;//DELETE
  end;

var
  WsEnderecoIntegracao: TWsEnderecoIntegracao;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

uses UDMConexao, DataSetConverter4D.Helper;

{$R *.dfm}

{ TWsPessoa }

function TWsEnderecoIntegracao.acceptPessoa(dados: TJSONObject): TJSONValue;
var
  VDmConexao: TDmConexao;
begin
  VDmConexao := TDmConexao.Create(nil);
  try
    VDmConexao.FdConexao.Connected := True;
    QyPessoa.Connection := VDmConexao.FdConexao;
    QyPessoa.ConnectionName := VDmConexao.FdConexao.ConnectionName;
    FDUpdateSQL.Connection := QyPessoa.Connection;
    QyPessoa.Close;
    QyPessoa.SQL.Clear;
    QyPessoa.SQL.Add('SELECT * FROM PESSOA');
    QyPessoa.SQL.Add(' WHERE IDPESSOA = -1');
    QyPessoa.Open;
    QyPessoa.FromJSONObject(dados);
    QyPessoa.ApplyUpdates();
    Result := QyPessoa.AsJSONArray;
  finally
    FreeAndNil(VDmConexao);
  end;
end;

function TWsEnderecoIntegracao.cancelPessoa(idpessoa: integer): TJSONValue;
var
  VDmConexao: TDmConexao;
begin
  VDmConexao := TDmConexao.Create(nil);
  try
    VDmConexao.FdConexao.Connected := True;
    QyPessoa.Connection := VDmConexao.FdConexao;
    QyPessoa.ConnectionName := VDmConexao.FdConexao.ConnectionName;
    FDUpdateSQL.Connection := QyPessoa.Connection;
    QyPessoa.Close;
    QyPessoa.SQL.Clear;
    QyPessoa.SQL.Add('SELECT * FROM PESSOA');
    QyPessoa.SQL.Add(' WHERE IDPESSOA = :pessoa');
    QyPessoa.ParamByName('pessoa').AsInteger := idpessoa;
    QyPessoa.Open;
    QyPessoa.Delete;
    QyPessoa.ApplyUpdates();
    Result := QyPessoa.AsJSONArray;
  finally
    FreeAndNil(VDmConexao);
  end;
end;

function TWsEnderecoIntegracao.Pessoa(idpessoa: integer): TJSONValue;
var
  VDmConexao: TDmConexao;
begin
  VDmConexao := TDmConexao.Create(nil);
  try
    VDmConexao.FdConexao.Connected := True;
    QyPessoa.Connection := VDmConexao.FdConexao;
    QyPessoa.ConnectionName := VDmConexao.FdConexao.ConnectionName;
    QyPessoa.Close;
    QyPessoa.SQL.Clear;
    QyPessoa.SQL.Add('SELECT * FROM PESSOA');
    if idpessoa > 0 then
    begin
      QyPessoa.SQL.Add(' WHERE IDPESSOA = :cd');
      QyPessoa.ParamByName('cd').AsInteger := idpessoa;
    end;
    QyPessoa.SQL.Add('ORDER BY nmprimeiro');
    QyPessoa.Open;
    Result := QyPessoa.AsJSONArray;
  finally
    FreeAndNil(VDmConexao);
  end;
end;

function TWsEnderecoIntegracao.updatePessoa(idpessoa: integer;
  dados: TJSONObject): TJSONValue;
var
  VDmConexao: TDmConexao;
begin
  VDmConexao := TDmConexao.Create(nil);
  try
    VDmConexao.FdConexao.Connected := True;
    QyPessoa.Connection := VDmConexao.FdConexao;
    QyPessoa.ConnectionName := VDmConexao.FdConexao.ConnectionName;
    FDUpdateSQL.Connection := QyPessoa.Connection;
    QyPessoa.Close;
    QyPessoa.SQL.Clear;
    QyPessoa.SQL.Add('SELECT * FROM PESSOA');
    QyPessoa.SQL.Add(' WHERE IDPESSOA = :pessoa');
    QyPessoa.ParamByName('pessoa').AsInteger := idpessoa;
    QyPessoa.Open;
    QyPessoa.RecordFromJSONObject(dados);
    QyPessoa.ApplyUpdates();
    Result := QyPessoa.AsJSONArray;
  finally
    FreeAndNil(VDmConexao);
  end;
end;

end.
